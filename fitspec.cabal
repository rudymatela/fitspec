name:                fitspec
version:             0.4.4
synopsis:            refining property sets for testing Haskell programs
description:
  FitSpec provides automated assistance in the task of refining test properties
  for Haskell functions.
  .
  FitSpec tests mutant variations of functions under test against a given
  property set, recording any surviving mutants that pass all tests. FitSpec
  then reports:
  .
  * surviving mutants: indicating incompleteness of properties,
    prompting the user to amend a property or to add a new one;
  .
  * conjectures: indicating redundancy in the property set,
    prompting the user to remove properties so to reduce the cost of testing.

homepage:            https://github.com/rudymatela/fitspec#readme
license:             BSD3
license-file:        LICENSE
author:              Rudy Matela,  Colin Runciman
maintainer:          Rudy Matela <rudy@matela.com.br>
category:            Testing
build-type:          Simple
cabal-version:       >=1.18

extra-doc-files: README.md
               , CREDITS.md
               , TODO.md
               , doc/modules.md
               , doc/tutorial-property-creation.md
tested-with: GHC==8.2, GHC==8.0, GHC==7.10, GHC==7.8, GHC==7.6, GHC==7.4

source-repository head
  type:            git
  location:        https://github.com/rudymatela/fitspec

source-repository this
  type:            git
  location:        https://github.com/rudymatela/fitspec
  tag:             v0.4.4


library
  exposed-modules: Test.FitSpec
                 , Test.FitSpec.Engine
                 , Test.FitSpec.Report
                 , Test.FitSpec.Mutable
                 , Test.FitSpec.Mutable.Tuples
                 , Test.FitSpec.ShowMutable
                 , Test.FitSpec.ShowMutable.Tuples
                 , Test.FitSpec.Derive
                 , Test.FitSpec.Main
                 , Test.FitSpec.TestTypes
                 , Test.FitSpec.Utils
                 , Test.FitSpec.PrettyPrint
  other-modules: Test.FitSpec.Dot
  build-depends: base >= 4 && < 5, leancheck >= 0.7, cmdargs, template-haskell
  hs-source-dirs:    src
  default-language:  Haskell2010


test-suite mutate
  type:                exitcode-stdio-1.0
  main-is:             test-mutate.hs
  hs-source-dirs:      tests
  build-depends: base >= 4 && < 5, leancheck, fitspec
  default-language:    Haskell2010

test-suite showmutable
  type:                exitcode-stdio-1.0
  main-is:             test-showmutable.hs
  hs-source-dirs:      tests
  build-depends: base >= 4 && < 5, leancheck, fitspec
  default-language:    Haskell2010

test-suite derive
  type:                exitcode-stdio-1.0
  main-is:             test-derive.hs
  hs-source-dirs:      tests
  build-depends: base >= 4 && < 5, leancheck, fitspec
  default-language:    Haskell2010

test-suite utils
  type:                exitcode-stdio-1.0
  main-is:             test-utils.hs
  hs-source-dirs:      tests
  build-depends: base >= 4 && < 5, leancheck, fitspec
  default-language:    Haskell2010


benchmark avltrees
  main-is:           avltrees.hs
  other-modules:     AVLTree
  build-depends: base >= 4 && < 5, fitspec
  hs-source-dirs:    bench
  default-language:  Haskell2010
  type:              exitcode-stdio-1.0

benchmark bools
  main-is:           bools.hs
  build-depends: base >= 4 && < 5, fitspec
  hs-source-dirs:    bench
  default-language:  Haskell2010
  type:              exitcode-stdio-1.0

benchmark digraphs
  main-is:           digraphs.hs
  other-modules:     Digraph
  build-depends: base >= 4 && < 5, fitspec
  hs-source-dirs:    bench
  default-language:  Haskell2010
  type:              exitcode-stdio-1.0

-- The haskell-src and haskell-src-exts are commented out as they pull a lot of
-- dependencies.  Ultimately a flag could be added to optionally activate them,
-- but better not make this cabal file too much complex.
--
--benchmark haskell-src
--  main-is:           haskell-src.hs
--  build-depends: base >= 4 && < 5, fitspec, haskell-src
--  hs-source-dirs:    bench
--  default-language:  Haskell2010
--  type:              exitcode-stdio-1.0
--
--benchmark haskell-src-exts
--  main-is:           haskell-src-exts.hs
--  build-depends: base >= 4 && < 5, fitspec, haskell-src-exts
--  hs-source-dirs:    bench
--  default-language:  Haskell2010
--  type:              exitcode-stdio-1.0

benchmark heaps
  main-is:           heaps.hs
  other-modules:     Heap
  build-depends: base >= 4 && < 5, fitspec
  hs-source-dirs:    bench
  default-language:  Haskell2010
  type:              exitcode-stdio-1.0

benchmark id
  main-is:           id.hs
  build-depends: base >= 4 && < 5, fitspec
  hs-source-dirs:    bench
  default-language:  Haskell2010
  type:              exitcode-stdio-1.0

benchmark list
  main-is:           list.hs
  build-depends: base >= 4 && < 5, fitspec
  hs-source-dirs:    bench
  default-language:  Haskell2010
  type:              exitcode-stdio-1.0

benchmark mergeheaps
  main-is:           mergeheaps.hs
  build-depends: base >= 4 && < 5, fitspec
  hs-source-dirs:    bench
  default-language:  Haskell2010
  type:              exitcode-stdio-1.0

benchmark pretty
  main-is:           pretty.hs
  build-depends: base >= 4 && < 5, fitspec, pretty
  hs-source-dirs:    bench
  default-language:  Haskell2010
  type:              exitcode-stdio-1.0

benchmark sets
  main-is:           sets.hs
  other-modules:     Set
  build-depends: base >= 4 && < 5, fitspec
  hs-source-dirs:    bench
  default-language:  Haskell2010
  type:              exitcode-stdio-1.0

benchmark setsofsets
  main-is:           setsofsets.hs
  other-modules:     Set
  build-depends: base >= 4 && < 5, fitspec
  hs-source-dirs:    bench
  default-language:  Haskell2010
  type:              exitcode-stdio-1.0

benchmark sieve
  main-is:           sieve.hs
  build-depends: base >= 4 && < 5, fitspec
  hs-source-dirs:    bench
  default-language:  Haskell2010
  type:              exitcode-stdio-1.0

benchmark sorting
  main-is:           sorting.hs
  build-depends: base >= 4 && < 5, fitspec
  hs-source-dirs:    bench
  default-language:  Haskell2010
  type:              exitcode-stdio-1.0

benchmark spring
  main-is:           spring.hs
  build-depends: base >= 4 && < 5, fitspec
  hs-source-dirs:    bench
  default-language:  Haskell2010
  type:              exitcode-stdio-1.0
