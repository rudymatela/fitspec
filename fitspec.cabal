name:                fitspec
version:             0.1.0.1
synopsis:            refining property sets for functional testing
description:
  FitSpec provides automated assistance in the task of
  refining property sets for functional testing.
  .
  When provided with a tuple of functions under test
  and a set of properties lifted over those functions,
  FitSpec provides a measure of minimality and completeness
  of those properties.

homepage:            https://github.com/rudymatela/fitspec#readme
license:             BSD3
license-file:        LICENSE
author:              Rudy Matela,  Colin Runciman
maintainer:          Rudy Matela <rudy@matela.com.br>
category:            Testing
build-type:          Simple
cabal-version:       >=1.10

extra-source-files:  README.md CREDITS.md

source-repository head
  type:            git
  location:        https://github.com/rudymatela/fitspec

source-repository this
  type:            git
  location:        https://github.com/rudymatela/fitspec
  tag:             v0.1.0.1

library
  exposed-modules: FitSpec
                 , FitSpec.Engine
                 , FitSpec.Main
                 , FitSpec.Mutable
                 , FitSpec.ShowMutable
                 , FitSpec.Derive
                 , FitSpec.TestTypes
                 , FitSpec.Most
  other-modules: FitSpec.Utils
               , FitSpec.PrettyPrint
               , FitSpec.Dot
  build-depends: base >= 4 && < 5, leancheck, cmdargs, template-haskell
  hs-source-dirs:    .
  default-language:  Haskell2010

benchmark bools
  main-is:           bools.hs
  build-depends: base >= 4 && < 5, leancheck, cmdargs, template-haskell
  hs-source-dirs:    ., bench
  default-language:  Haskell2010
  type:              exitcode-stdio-1.0

benchmark spring
  main-is:           spring.hs
  build-depends: base >= 4 && < 5, leancheck, cmdargs, template-haskell
  hs-source-dirs:    ., bench
  default-language:  Haskell2010
  type:              exitcode-stdio-1.0

benchmark sorting
  main-is:           sorting.hs
  build-depends: base >= 4 && < 5, leancheck, cmdargs, template-haskell
  hs-source-dirs:    ., bench
  default-language:  Haskell2010
  type:              exitcode-stdio-1.0

benchmark heaps
  main-is:           heaps.hs
  build-depends: base >= 4 && < 5, leancheck, cmdargs, template-haskell
  hs-source-dirs:    ., bench
  default-language:  Haskell2010
  type:              exitcode-stdio-1.0

benchmark list
  main-is:           list.hs
  build-depends: base >= 4 && < 5, leancheck, cmdargs, template-haskell
  hs-source-dirs:    ., bench
  default-language:  Haskell2010
  type:              exitcode-stdio-1.0

benchmark avltrees
  main-is:           avltrees.hs
  build-depends: base >= 4 && < 5, leancheck, cmdargs, template-haskell
  hs-source-dirs:    ., bench
  default-language:  Haskell2010
  type:              exitcode-stdio-1.0

benchmark pretty
  main-is:           pretty.hs
  build-depends: base >= 4 && < 5, leancheck, cmdargs, template-haskell, pretty
  hs-source-dirs:    ., bench
  default-language:  Haskell2010
  type:              exitcode-stdio-1.0

benchmark sieve
  main-is:           sieve.hs
  build-depends: base >= 4 && < 5, leancheck, cmdargs, template-haskell
  hs-source-dirs:    ., bench
  default-language:  Haskell2010
  type:              exitcode-stdio-1.0

benchmark id
  main-is:           id.hs
  build-depends: base >= 4 && < 5, leancheck, cmdargs, template-haskell
  hs-source-dirs:    ., bench
  default-language:  Haskell2010
  type:              exitcode-stdio-1.0

test-suite mutate
  type:                exitcode-stdio-1.0
  main-is:             test-mutate.hs
  hs-source-dirs:      ., tests
  build-depends: base >= 4 && < 5, leancheck, cmdargs, template-haskell
  default-language:    Haskell2010

test-suite showmutable
  type:                exitcode-stdio-1.0
  main-is:             test-showmutable.hs
  hs-source-dirs:      ., tests
  build-depends: base >= 4 && < 5, leancheck, cmdargs, template-haskell
  default-language:    Haskell2010

test-suite derive
  type:                exitcode-stdio-1.0
  main-is:             test-derive.hs
  hs-source-dirs:      ., tests
  build-depends: base >= 4 && < 5, leancheck, cmdargs, template-haskell
  default-language:    Haskell2010
